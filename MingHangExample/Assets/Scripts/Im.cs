// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Im.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Im {

  /// <summary>Holder for reflection information generated from Im.proto</summary>
  public static partial class ImReflection {

    #region Descriptor
    /// <summary>File descriptor for Im.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ImReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CghJbS5wcm90bxICSW0aGWdvb2dsZS9wcm90b2J1Zi9hbnkucHJvdG8iTgoM",
            "TG9naW5SZXF1ZXN0Eg0KBXRva2VuGAEgASgJEgsKA3VpZBgCIAEoCRIiCgpw",
            "bGF5ZXJQYWNrGAMgASgLMg4uSW0uUGxheWVyUGFjayI0Cg1Mb2dpblJlc3Bv",
            "bnNlEg4KBnJlc3VsdBgBIAEoCBITCgtkZXNjcmlwdGlvbhgCIAEoCSI2ChBV",
            "c2VybG9naW5SZXF1ZXN0EhAKCHVzZXJuYW1lGAEgASgJEhAKCHBhc3N3b3Jk",
            "GAIgASgJIjMKDFVzZXJsb2dpblJzcBIOCgZyZXN1bHQYASABKAgSEwoLZGVz",
            "Y3JpcHRpb24YAiABKAkiJQoQSm9pbkxvYmJ5UmVxdWVzdBIRCglsb2JieW5h",
            "bWUYASABKAkiEwoRTGVhdmVMb2JieVJlcXVlc3QiDwoNTGVhdmVMb2JieVJz",
            "cCIzCgxKb2luTG9iYnlSc3ASDgoGcmVzdWx0GAEgASgIEhMKC2Rlc2N0aXB0",
            "aW9uGAIgASgJIhIKEExvYmJ5SW5mb1JlcXVlc3QiNAoMTG9iYnlJbmZvUnNw",
            "EiQKDm1fcm9vbV9pbmxvYmJ5GAEgAygLMgwuSW0uUm9vbUluZm8i3QEKCFJv",
            "b21JbmZvEhEKCXJvb21fbmFtZRgBIAEoCRIVCg1yb29tX21heHVzZXJzGAIg",
            "ASgJEhoKEnJvb21fcGVvcGxlX21vbWJlchgDIAEoCRIQCghuYW1lbGlzdBgE",
            "IAMoCRITCgtyb29tX3N0YXR1cxgFIAEoBRIYChBvcGVyYXRvcnNfbnVtYmVy",
            "GAYgASgFEhYKDnZpZXdlcnNfbnVtYmVyGAcgASgFEhYKDnVzZXJfd2l0aF9y",
            "b2xlGAggASgJEhoKEmN1cnJlbnRfdGFza19pbmRleBgJIAEoBSJCChVKb2lS",
            "b29tSW5Mb2JieVJlcXVlc3QSEQoJcm9vbV9uYW1lGAEgASgJEhYKDnJvb21f",
            "bWF4cGxheWVyGAIgASgFIlAKF0pvaW5Sb29tSW5Mb2JieVJlc3BvbnNlEg4K",
            "BnJlc3VsdBgBIAEoCBIQCghpc01hc3RlchgCIAEoCBITCgtkZXNjcmlwdGlv",
            "bhgDIAEoCSIlChBMZWF2ZVJvb21SZXF1ZXN0EhEKCXJvb21fbmFtZRgBIAEo",
            "CSI6ChFMZWF2ZVJvb21SZXNwb25zZRITCgtwbGF5ZXJfbmFtZRgBIAEoCRIQ",
            "Cghpc01hc3RlchgCIAEoCCI0ChJPblJvb21JbmZvUmVzcG9uc2USHgoIcm9s",
            "ZUluZm8YASABKAsyDC5JbS5Sb29tSW5mbyKSAQoVVXBkYXRlUm9vbUluZm9S",
            "ZXF1ZXN0EhMKC3Jvb21fc3RhdHVzGAEgASgFEhgKEG9wZXJhdG9yc19udW1i",
            "ZXIYAiABKAUSFgoOdmlld2Vyc19udW1iZXIYAyABKAUSFgoOdXNlcl93aXRo",
            "X3JvbGUYBCABKAkSGgoSY3VycmVudF90YXNrX2luZGV4GAUgASgFIhEKD0xp",
            "c3RSb29tUmVxdWVzdCIiCg9Kb2luUm9vbVJlcXVlc3QSDwoHcm9vbV9ubxgB",
            "IAEoCSI1ChNQdXNoVGFza0luZm9SZXF1ZXN0Eh4KCHRhc2tpbmZvGAEgASgL",
            "MgwuSW0uVGFza0luZm8iLwoPUHVzaFRhc2tJbmZvUnNwEhwKBnRhc2tpZBgB",
            "IAEoCzIMLkltLlRhc2tJbmZvIlEKCFRhc2tJbmZvEgwKBHRpbWUYASABKAES",
            "DgoGdGFza2lkGAIgASgFEg8KB2NoYXRlcnAYAyABKAUSFgoOcGxheWFibGVz",
            "dGF0dXMYBCABKAUiIgoPRXhpdFJvb21SZXF1ZXN0Eg8KB3Jvb21fbm8YASAB",
            "KAkiNgoNRXJyb3JSZXNwb25zZRIQCghlcnJfY29kZRgBIAEoBRITCgtlcnJf",
            "bWVzc2FnZRgCIAEoCSIiCg9TdWNjZXNzUmVzcG9uc2USDwoHbWVzc2FnZRgB",
            "IAEoCSISChBTdGFydEdhbWVSZXF1ZXN0Ig4KDFN0YXJ0R2FtZVJzcCJBCgtH",
            "YW1lQ29tbWFuZBIhCgR0eXBlGAEgASgOMhMuSW0uR2FtZUNvbW1hbmRUeXBl",
            "Eg8KB2NvbnRlbnQYAiABKAkiNgoFSW1Nc2cSCgoCaWQYASABKAUSIQoDbXNn",
            "GAIgASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueSI2ChBKb2luUm9vbVJlc3Bv",
            "bnNlEiIKCnBsYXllclBhY2sYASADKAsyDi5JbS5QbGF5ZXJQYWNrIisKBVVw",
            "UG9zEiIKCnBsYXllclBhY2sYASABKAsyDi5JbS5QbGF5ZXJQYWNrIjMKDVVw",
            "UG9zUmVzcG9uc2USIgoKcGxheWVyUGFjaxgBIAEoCzIOLkltLlBsYXllclBh",
            "Y2siiwEKClBsYXllclBhY2sSCwoDdWlkGAEgASgJEhwKB3Bvc1BhY2sYAiAB",
            "KAsyCy5JbS5Qb3NQYWNrEh4KCGFuaW1QYWNrGAMgASgLMgwuSW0uQW5pbVBh",
            "Y2sSEAoIbmlja05hbWUYBCABKAkSDgoGY2hhdG5vGAUgASgJEhAKCHJvbGVJ",
            "bmZvGAYgASgJIjgKB1Bvc1BhY2sSCQoBeBgBIAEoAhIJCgF5GAIgASgCEgkK",
            "AXoYAyABKAISDAoEcm90WRgEIAEoAiJLCghBbmltUGFjaxINCgVzcGVlZBgB",
            "IAEoAhIMCgRKdW1wGAIgASgIEhAKCEdyb3VuZGVkGAMgASgIEhAKCEZyZWVG",
            "YWxsGAQgASgIIi8KCUFkZFBsYXllchIiCgpwbGF5ZXJQYWNrGAEgASgLMg4u",
            "SW0uUGxheWVyUGFjayIsCgZMb2dvdXQSIgoKcGxheWVyUGFjaxgBIAEoCzIO",
            "LkltLlBsYXllclBhY2siLgoIRXhpdFJvb20SIgoKcGxheWVyUGFjaxgBIAEo",
            "CzIOLkltLlBsYXllclBhY2sqRgoPR2FtZUNvbW1hbmRUeXBlEhgKFFVwZGF0",
            "ZV9Sb29tX01heHVzZXJzEAASGQoVU3luY19Sb29tX1VzZXJfU3RhdHVzEAFC",
            "KQoeY29tLm1nZWUubmV0dHkuc2VydmVyLnByb3RvYnVmQgdJbVByb3RvYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Im.GameCommandType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.LoginRequest), global::Im.LoginRequest.Parser, new[]{ "Token", "Uid", "PlayerPack" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.LoginResponse), global::Im.LoginResponse.Parser, new[]{ "Result", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.UserloginRequest), global::Im.UserloginRequest.Parser, new[]{ "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.UserloginRsp), global::Im.UserloginRsp.Parser, new[]{ "Result", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.JoinLobbyRequest), global::Im.JoinLobbyRequest.Parser, new[]{ "Lobbyname" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.LeaveLobbyRequest), global::Im.LeaveLobbyRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.LeaveLobbyRsp), global::Im.LeaveLobbyRsp.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.JoinLobbyRsp), global::Im.JoinLobbyRsp.Parser, new[]{ "Result", "Desctiption" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.LobbyInfoRequest), global::Im.LobbyInfoRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.LobbyInfoRsp), global::Im.LobbyInfoRsp.Parser, new[]{ "MRoomInlobby" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.RoomInfo), global::Im.RoomInfo.Parser, new[]{ "RoomName", "RoomMaxusers", "RoomPeopleMomber", "Namelist", "RoomStatus", "OperatorsNumber", "ViewersNumber", "UserWithRole", "CurrentTaskIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.JoiRoomInLobbyRequest), global::Im.JoiRoomInLobbyRequest.Parser, new[]{ "RoomName", "RoomMaxplayer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.JoinRoomInLobbyResponse), global::Im.JoinRoomInLobbyResponse.Parser, new[]{ "Result", "IsMaster", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.LeaveRoomRequest), global::Im.LeaveRoomRequest.Parser, new[]{ "RoomName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.LeaveRoomResponse), global::Im.LeaveRoomResponse.Parser, new[]{ "PlayerName", "IsMaster" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.OnRoomInfoResponse), global::Im.OnRoomInfoResponse.Parser, new[]{ "RoleInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.UpdateRoomInfoRequest), global::Im.UpdateRoomInfoRequest.Parser, new[]{ "RoomStatus", "OperatorsNumber", "ViewersNumber", "UserWithRole", "CurrentTaskIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.ListRoomRequest), global::Im.ListRoomRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.JoinRoomRequest), global::Im.JoinRoomRequest.Parser, new[]{ "RoomNo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.PushTaskInfoRequest), global::Im.PushTaskInfoRequest.Parser, new[]{ "Taskinfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.PushTaskInfoRsp), global::Im.PushTaskInfoRsp.Parser, new[]{ "Taskid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.TaskInfo), global::Im.TaskInfo.Parser, new[]{ "Time", "Taskid", "Chaterp", "Playablestatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.ExitRoomRequest), global::Im.ExitRoomRequest.Parser, new[]{ "RoomNo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.ErrorResponse), global::Im.ErrorResponse.Parser, new[]{ "ErrCode", "ErrMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.SuccessResponse), global::Im.SuccessResponse.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.StartGameRequest), global::Im.StartGameRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.StartGameRsp), global::Im.StartGameRsp.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.GameCommand), global::Im.GameCommand.Parser, new[]{ "Type", "Content" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.ImMsg), global::Im.ImMsg.Parser, new[]{ "Id", "Msg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.JoinRoomResponse), global::Im.JoinRoomResponse.Parser, new[]{ "PlayerPack" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.UpPos), global::Im.UpPos.Parser, new[]{ "PlayerPack" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.UpPosResponse), global::Im.UpPosResponse.Parser, new[]{ "PlayerPack" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.PlayerPack), global::Im.PlayerPack.Parser, new[]{ "Uid", "PosPack", "AnimPack", "NickName", "Chatno", "RoleInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.PosPack), global::Im.PosPack.Parser, new[]{ "X", "Y", "Z", "RotY" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.AnimPack), global::Im.AnimPack.Parser, new[]{ "Speed", "Jump", "Grounded", "FreeFall" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.AddPlayer), global::Im.AddPlayer.Parser, new[]{ "PlayerPack" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.Logout), global::Im.Logout.Parser, new[]{ "PlayerPack" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Im.ExitRoom), global::Im.ExitRoom.Parser, new[]{ "PlayerPack" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum GameCommandType {
    /// <summary>
    /// 修改房间人数上限
    /// </summary>
    [pbr::OriginalName("Update_Room_Maxusers")] UpdateRoomMaxusers = 0,
    [pbr::OriginalName("Sync_Room_User_Status")] SyncRoomUserStatus = 1,
  }

  #endregion

  #region Messages
  public sealed partial class LoginRequest : pb::IMessage<LoginRequest> {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      token_ = other.token_;
      uid_ = other.uid_;
      playerPack_ = other.playerPack_ != null ? other.playerPack_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private string token_ = "";
    /// <summary>
    /// 用户token
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private string uid_ = "";
    /// <summary>
    ///发送者uid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerPack" field.</summary>
    public const int PlayerPackFieldNumber = 3;
    private global::Im.PlayerPack playerPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Im.PlayerPack PlayerPack {
      get { return playerPack_; }
      set {
        playerPack_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if (Uid != other.Uid) return false;
      if (!object.Equals(PlayerPack, other.PlayerPack)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (playerPack_ != null) hash ^= PlayerPack.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (playerPack_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlayerPack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (playerPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerPack);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.playerPack_ != null) {
        if (playerPack_ == null) {
          PlayerPack = new global::Im.PlayerPack();
        }
        PlayerPack.MergeFrom(other.PlayerPack);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
          case 26: {
            if (playerPack_ == null) {
              PlayerPack = new global::Im.PlayerPack();
            }
            input.ReadMessage(PlayerPack);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginResponse : pb::IMessage<LoginResponse> {
    private static readonly pb::MessageParser<LoginResponse> _parser = new pb::MessageParser<LoginResponse>(() => new LoginResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse(LoginResponse other) : this() {
      result_ = other.result_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse Clone() {
      return new LoginResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    /// <summary>
    /// 登录校验结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// 登录校验结果描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserloginRequest : pb::IMessage<UserloginRequest> {
    private static readonly pb::MessageParser<UserloginRequest> _parser = new pb::MessageParser<UserloginRequest>(() => new UserloginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserloginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserloginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserloginRequest(UserloginRequest other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserloginRequest Clone() {
      return new UserloginRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    /// <summary>
    ///登陆名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    /// <summary>
    ///登陆密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserloginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserloginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserloginRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserloginRsp : pb::IMessage<UserloginRsp> {
    private static readonly pb::MessageParser<UserloginRsp> _parser = new pb::MessageParser<UserloginRsp>(() => new UserloginRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserloginRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserloginRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserloginRsp(UserloginRsp other) : this() {
      result_ = other.result_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserloginRsp Clone() {
      return new UserloginRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    /// <summary>
    /// 登录校验结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// 登录校验结果描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserloginRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserloginRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserloginRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinLobbyRequest : pb::IMessage<JoinLobbyRequest> {
    private static readonly pb::MessageParser<JoinLobbyRequest> _parser = new pb::MessageParser<JoinLobbyRequest>(() => new JoinLobbyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinLobbyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinLobbyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinLobbyRequest(JoinLobbyRequest other) : this() {
      lobbyname_ = other.lobbyname_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinLobbyRequest Clone() {
      return new JoinLobbyRequest(this);
    }

    /// <summary>Field number for the "lobbyname" field.</summary>
    public const int LobbynameFieldNumber = 1;
    private string lobbyname_ = "";
    /// <summary>
    ///要加入的大厅名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Lobbyname {
      get { return lobbyname_; }
      set {
        lobbyname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinLobbyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinLobbyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Lobbyname != other.Lobbyname) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Lobbyname.Length != 0) hash ^= Lobbyname.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Lobbyname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Lobbyname);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Lobbyname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Lobbyname);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinLobbyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Lobbyname.Length != 0) {
        Lobbyname = other.Lobbyname;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Lobbyname = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///离开大厅的请求
  /// </summary>
  public sealed partial class LeaveLobbyRequest : pb::IMessage<LeaveLobbyRequest> {
    private static readonly pb::MessageParser<LeaveLobbyRequest> _parser = new pb::MessageParser<LeaveLobbyRequest>(() => new LeaveLobbyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveLobbyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveLobbyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveLobbyRequest(LeaveLobbyRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveLobbyRequest Clone() {
      return new LeaveLobbyRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveLobbyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveLobbyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveLobbyRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///离开大厅的响应
  /// </summary>
  public sealed partial class LeaveLobbyRsp : pb::IMessage<LeaveLobbyRsp> {
    private static readonly pb::MessageParser<LeaveLobbyRsp> _parser = new pb::MessageParser<LeaveLobbyRsp>(() => new LeaveLobbyRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveLobbyRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveLobbyRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveLobbyRsp(LeaveLobbyRsp other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveLobbyRsp Clone() {
      return new LeaveLobbyRsp(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveLobbyRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveLobbyRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveLobbyRsp other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class JoinLobbyRsp : pb::IMessage<JoinLobbyRsp> {
    private static readonly pb::MessageParser<JoinLobbyRsp> _parser = new pb::MessageParser<JoinLobbyRsp>(() => new JoinLobbyRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinLobbyRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinLobbyRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinLobbyRsp(JoinLobbyRsp other) : this() {
      result_ = other.result_;
      desctiption_ = other.desctiption_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinLobbyRsp Clone() {
      return new JoinLobbyRsp(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    /// <summary>
    ///登陆校验结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "desctiption" field.</summary>
    public const int DesctiptionFieldNumber = 2;
    private string desctiption_ = "";
    /// <summary>
    ///登陆校验结果描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Desctiption {
      get { return desctiption_; }
      set {
        desctiption_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinLobbyRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinLobbyRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Desctiption != other.Desctiption) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (Desctiption.Length != 0) hash ^= Desctiption.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (Desctiption.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Desctiption);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (Desctiption.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desctiption);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinLobbyRsp other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      if (other.Desctiption.Length != 0) {
        Desctiption = other.Desctiption;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
          case 18: {
            Desctiption = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LobbyInfoRequest : pb::IMessage<LobbyInfoRequest> {
    private static readonly pb::MessageParser<LobbyInfoRequest> _parser = new pb::MessageParser<LobbyInfoRequest>(() => new LobbyInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LobbyInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyInfoRequest(LobbyInfoRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyInfoRequest Clone() {
      return new LobbyInfoRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LobbyInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LobbyInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LobbyInfoRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class LobbyInfoRsp : pb::IMessage<LobbyInfoRsp> {
    private static readonly pb::MessageParser<LobbyInfoRsp> _parser = new pb::MessageParser<LobbyInfoRsp>(() => new LobbyInfoRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LobbyInfoRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyInfoRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyInfoRsp(LobbyInfoRsp other) : this() {
      mRoomInlobby_ = other.mRoomInlobby_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyInfoRsp Clone() {
      return new LobbyInfoRsp(this);
    }

    /// <summary>Field number for the "m_room_inlobby" field.</summary>
    public const int MRoomInlobbyFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Im.RoomInfo> _repeated_mRoomInlobby_codec
        = pb::FieldCodec.ForMessage(10, global::Im.RoomInfo.Parser);
    private readonly pbc::RepeatedField<global::Im.RoomInfo> mRoomInlobby_ = new pbc::RepeatedField<global::Im.RoomInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Im.RoomInfo> MRoomInlobby {
      get { return mRoomInlobby_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LobbyInfoRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LobbyInfoRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mRoomInlobby_.Equals(other.mRoomInlobby_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mRoomInlobby_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      mRoomInlobby_.WriteTo(output, _repeated_mRoomInlobby_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mRoomInlobby_.CalculateSize(_repeated_mRoomInlobby_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LobbyInfoRsp other) {
      if (other == null) {
        return;
      }
      mRoomInlobby_.Add(other.mRoomInlobby_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mRoomInlobby_.AddEntriesFrom(input, _repeated_mRoomInlobby_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomInfo : pb::IMessage<RoomInfo> {
    private static readonly pb::MessageParser<RoomInfo> _parser = new pb::MessageParser<RoomInfo>(() => new RoomInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo(RoomInfo other) : this() {
      roomName_ = other.roomName_;
      roomMaxusers_ = other.roomMaxusers_;
      roomPeopleMomber_ = other.roomPeopleMomber_;
      namelist_ = other.namelist_.Clone();
      roomStatus_ = other.roomStatus_;
      operatorsNumber_ = other.operatorsNumber_;
      viewersNumber_ = other.viewersNumber_;
      userWithRole_ = other.userWithRole_;
      currentTaskIndex_ = other.currentTaskIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo Clone() {
      return new RoomInfo(this);
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 1;
    private string roomName_ = "";
    /// <summary>
    ///当前钱房间名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room_maxusers" field.</summary>
    public const int RoomMaxusersFieldNumber = 2;
    private string roomMaxusers_ = "";
    /// <summary>
    ///当前房间人数上限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomMaxusers {
      get { return roomMaxusers_; }
      set {
        roomMaxusers_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room_people_momber" field.</summary>
    public const int RoomPeopleMomberFieldNumber = 3;
    private string roomPeopleMomber_ = "";
    /// <summary>
    ///当前房间人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomPeopleMomber {
      get { return roomPeopleMomber_; }
      set {
        roomPeopleMomber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "namelist" field.</summary>
    public const int NamelistFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_namelist_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> namelist_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///当前房间的所有玩家名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Namelist {
      get { return namelist_; }
    }

    /// <summary>Field number for the "room_status" field.</summary>
    public const int RoomStatusFieldNumber = 5;
    private int roomStatus_;
    /// <summary>
    ///当前房间任务状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomStatus {
      get { return roomStatus_; }
      set {
        roomStatus_ = value;
      }
    }

    /// <summary>Field number for the "operators_number" field.</summary>
    public const int OperatorsNumberFieldNumber = 6;
    private int operatorsNumber_;
    /// <summary>
    ///当前操作人员数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OperatorsNumber {
      get { return operatorsNumber_; }
      set {
        operatorsNumber_ = value;
      }
    }

    /// <summary>Field number for the "viewers_number" field.</summary>
    public const int ViewersNumberFieldNumber = 7;
    private int viewersNumber_;
    /// <summary>
    ///当前观看人员数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ViewersNumber {
      get { return viewersNumber_; }
      set {
        viewersNumber_ = value;
      }
    }

    /// <summary>Field number for the "user_with_role" field.</summary>
    public const int UserWithRoleFieldNumber = 8;
    private string userWithRole_ = "";
    /// <summary>
    ///当前操作角色对应表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserWithRole {
      get { return userWithRole_; }
      set {
        userWithRole_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "current_task_index" field.</summary>
    public const int CurrentTaskIndexFieldNumber = 9;
    private int currentTaskIndex_;
    /// <summary>
    ///当前任务序号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentTaskIndex {
      get { return currentTaskIndex_; }
      set {
        currentTaskIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomName != other.RoomName) return false;
      if (RoomMaxusers != other.RoomMaxusers) return false;
      if (RoomPeopleMomber != other.RoomPeopleMomber) return false;
      if(!namelist_.Equals(other.namelist_)) return false;
      if (RoomStatus != other.RoomStatus) return false;
      if (OperatorsNumber != other.OperatorsNumber) return false;
      if (ViewersNumber != other.ViewersNumber) return false;
      if (UserWithRole != other.UserWithRole) return false;
      if (CurrentTaskIndex != other.CurrentTaskIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (RoomMaxusers.Length != 0) hash ^= RoomMaxusers.GetHashCode();
      if (RoomPeopleMomber.Length != 0) hash ^= RoomPeopleMomber.GetHashCode();
      hash ^= namelist_.GetHashCode();
      if (RoomStatus != 0) hash ^= RoomStatus.GetHashCode();
      if (OperatorsNumber != 0) hash ^= OperatorsNumber.GetHashCode();
      if (ViewersNumber != 0) hash ^= ViewersNumber.GetHashCode();
      if (UserWithRole.Length != 0) hash ^= UserWithRole.GetHashCode();
      if (CurrentTaskIndex != 0) hash ^= CurrentTaskIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (RoomMaxusers.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoomMaxusers);
      }
      if (RoomPeopleMomber.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RoomPeopleMomber);
      }
      namelist_.WriteTo(output, _repeated_namelist_codec);
      if (RoomStatus != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RoomStatus);
      }
      if (OperatorsNumber != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(OperatorsNumber);
      }
      if (ViewersNumber != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ViewersNumber);
      }
      if (UserWithRole.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(UserWithRole);
      }
      if (CurrentTaskIndex != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CurrentTaskIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (RoomMaxusers.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomMaxusers);
      }
      if (RoomPeopleMomber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomPeopleMomber);
      }
      size += namelist_.CalculateSize(_repeated_namelist_codec);
      if (RoomStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomStatus);
      }
      if (OperatorsNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OperatorsNumber);
      }
      if (ViewersNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ViewersNumber);
      }
      if (UserWithRole.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserWithRole);
      }
      if (CurrentTaskIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentTaskIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomInfo other) {
      if (other == null) {
        return;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.RoomMaxusers.Length != 0) {
        RoomMaxusers = other.RoomMaxusers;
      }
      if (other.RoomPeopleMomber.Length != 0) {
        RoomPeopleMomber = other.RoomPeopleMomber;
      }
      namelist_.Add(other.namelist_);
      if (other.RoomStatus != 0) {
        RoomStatus = other.RoomStatus;
      }
      if (other.OperatorsNumber != 0) {
        OperatorsNumber = other.OperatorsNumber;
      }
      if (other.ViewersNumber != 0) {
        ViewersNumber = other.ViewersNumber;
      }
      if (other.UserWithRole.Length != 0) {
        UserWithRole = other.UserWithRole;
      }
      if (other.CurrentTaskIndex != 0) {
        CurrentTaskIndex = other.CurrentTaskIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 18: {
            RoomMaxusers = input.ReadString();
            break;
          }
          case 26: {
            RoomPeopleMomber = input.ReadString();
            break;
          }
          case 34: {
            namelist_.AddEntriesFrom(input, _repeated_namelist_codec);
            break;
          }
          case 40: {
            RoomStatus = input.ReadInt32();
            break;
          }
          case 48: {
            OperatorsNumber = input.ReadInt32();
            break;
          }
          case 56: {
            ViewersNumber = input.ReadInt32();
            break;
          }
          case 66: {
            UserWithRole = input.ReadString();
            break;
          }
          case 72: {
            CurrentTaskIndex = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///加入或创建大厅内的房间
  /// </summary>
  public sealed partial class JoiRoomInLobbyRequest : pb::IMessage<JoiRoomInLobbyRequest> {
    private static readonly pb::MessageParser<JoiRoomInLobbyRequest> _parser = new pb::MessageParser<JoiRoomInLobbyRequest>(() => new JoiRoomInLobbyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoiRoomInLobbyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoiRoomInLobbyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoiRoomInLobbyRequest(JoiRoomInLobbyRequest other) : this() {
      roomName_ = other.roomName_;
      roomMaxplayer_ = other.roomMaxplayer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoiRoomInLobbyRequest Clone() {
      return new JoiRoomInLobbyRequest(this);
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 1;
    private string roomName_ = "";
    /// <summary>
    ///房间名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room_maxplayer" field.</summary>
    public const int RoomMaxplayerFieldNumber = 2;
    private int roomMaxplayer_;
    /// <summary>
    ///房间的最大人数设置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomMaxplayer {
      get { return roomMaxplayer_; }
      set {
        roomMaxplayer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoiRoomInLobbyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoiRoomInLobbyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomName != other.RoomName) return false;
      if (RoomMaxplayer != other.RoomMaxplayer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (RoomMaxplayer != 0) hash ^= RoomMaxplayer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (RoomMaxplayer != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RoomMaxplayer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (RoomMaxplayer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomMaxplayer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoiRoomInLobbyRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.RoomMaxplayer != 0) {
        RoomMaxplayer = other.RoomMaxplayer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 16: {
            RoomMaxplayer = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///返回登陆结果
  /// </summary>
  public sealed partial class JoinRoomInLobbyResponse : pb::IMessage<JoinRoomInLobbyResponse> {
    private static readonly pb::MessageParser<JoinRoomInLobbyResponse> _parser = new pb::MessageParser<JoinRoomInLobbyResponse>(() => new JoinRoomInLobbyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRoomInLobbyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomInLobbyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomInLobbyResponse(JoinRoomInLobbyResponse other) : this() {
      result_ = other.result_;
      isMaster_ = other.isMaster_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomInLobbyResponse Clone() {
      return new JoinRoomInLobbyResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    /// <summary>
    /// 登录校验结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "isMaster" field.</summary>
    public const int IsMasterFieldNumber = 2;
    private bool isMaster_;
    /// <summary>
    ///我是否是房主
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsMaster {
      get { return isMaster_; }
      set {
        isMaster_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// 登录校验结果描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRoomInLobbyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRoomInLobbyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (IsMaster != other.IsMaster) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (IsMaster != false) hash ^= IsMaster.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (IsMaster != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsMaster);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (IsMaster != false) {
        size += 1 + 1;
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRoomInLobbyResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      if (other.IsMaster != false) {
        IsMaster = other.IsMaster;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
          case 16: {
            IsMaster = input.ReadBool();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeaveRoomRequest : pb::IMessage<LeaveRoomRequest> {
    private static readonly pb::MessageParser<LeaveRoomRequest> _parser = new pb::MessageParser<LeaveRoomRequest>(() => new LeaveRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomRequest(LeaveRoomRequest other) : this() {
      roomName_ = other.roomName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomRequest Clone() {
      return new LeaveRoomRequest(this);
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 1;
    private string roomName_ = "";
    /// <summary>
    ///房间名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomName != other.RoomName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeaveRoomResponse : pb::IMessage<LeaveRoomResponse> {
    private static readonly pb::MessageParser<LeaveRoomResponse> _parser = new pb::MessageParser<LeaveRoomResponse>(() => new LeaveRoomResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveRoomResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomResponse(LeaveRoomResponse other) : this() {
      playerName_ = other.playerName_;
      isMaster_ = other.isMaster_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRoomResponse Clone() {
      return new LeaveRoomResponse(this);
    }

    /// <summary>Field number for the "player_name" field.</summary>
    public const int PlayerNameFieldNumber = 1;
    private string playerName_ = "";
    /// <summary>
    ///玩家离开房间的
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isMaster" field.</summary>
    public const int IsMasterFieldNumber = 2;
    private bool isMaster_;
    /// <summary>
    ///玩家是否为房主
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsMaster {
      get { return isMaster_; }
      set {
        isMaster_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveRoomResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveRoomResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerName != other.PlayerName) return false;
      if (IsMaster != other.IsMaster) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (IsMaster != false) hash ^= IsMaster.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerName);
      }
      if (IsMaster != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsMaster);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (IsMaster != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveRoomResponse other) {
      if (other == null) {
        return;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.IsMaster != false) {
        IsMaster = other.IsMaster;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerName = input.ReadString();
            break;
          }
          case 16: {
            IsMaster = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// </summary>
  public sealed partial class OnRoomInfoResponse : pb::IMessage<OnRoomInfoResponse> {
    private static readonly pb::MessageParser<OnRoomInfoResponse> _parser = new pb::MessageParser<OnRoomInfoResponse>(() => new OnRoomInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnRoomInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnRoomInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnRoomInfoResponse(OnRoomInfoResponse other) : this() {
      roleInfo_ = other.roleInfo_ != null ? other.roleInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnRoomInfoResponse Clone() {
      return new OnRoomInfoResponse(this);
    }

    /// <summary>Field number for the "roleInfo" field.</summary>
    public const int RoleInfoFieldNumber = 1;
    private global::Im.RoomInfo roleInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Im.RoomInfo RoleInfo {
      get { return roleInfo_; }
      set {
        roleInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnRoomInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnRoomInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RoleInfo, other.RoleInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (roleInfo_ != null) hash ^= RoleInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (roleInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RoleInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (roleInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoleInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnRoomInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.roleInfo_ != null) {
        if (roleInfo_ == null) {
          RoleInfo = new global::Im.RoomInfo();
        }
        RoleInfo.MergeFrom(other.RoleInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (roleInfo_ == null) {
              RoleInfo = new global::Im.RoomInfo();
            }
            input.ReadMessage(RoleInfo);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///更新房间信息-选填
  /// </summary>
  public sealed partial class UpdateRoomInfoRequest : pb::IMessage<UpdateRoomInfoRequest> {
    private static readonly pb::MessageParser<UpdateRoomInfoRequest> _parser = new pb::MessageParser<UpdateRoomInfoRequest>(() => new UpdateRoomInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRoomInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRoomInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRoomInfoRequest(UpdateRoomInfoRequest other) : this() {
      roomStatus_ = other.roomStatus_;
      operatorsNumber_ = other.operatorsNumber_;
      viewersNumber_ = other.viewersNumber_;
      userWithRole_ = other.userWithRole_;
      currentTaskIndex_ = other.currentTaskIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRoomInfoRequest Clone() {
      return new UpdateRoomInfoRequest(this);
    }

    /// <summary>Field number for the "room_status" field.</summary>
    public const int RoomStatusFieldNumber = 1;
    private int roomStatus_;
    /// <summary>
    ///当前房间任务状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomStatus {
      get { return roomStatus_; }
      set {
        roomStatus_ = value;
      }
    }

    /// <summary>Field number for the "operators_number" field.</summary>
    public const int OperatorsNumberFieldNumber = 2;
    private int operatorsNumber_;
    /// <summary>
    ///当前操作人员数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OperatorsNumber {
      get { return operatorsNumber_; }
      set {
        operatorsNumber_ = value;
      }
    }

    /// <summary>Field number for the "viewers_number" field.</summary>
    public const int ViewersNumberFieldNumber = 3;
    private int viewersNumber_;
    /// <summary>
    ///当前观看人员数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ViewersNumber {
      get { return viewersNumber_; }
      set {
        viewersNumber_ = value;
      }
    }

    /// <summary>Field number for the "user_with_role" field.</summary>
    public const int UserWithRoleFieldNumber = 4;
    private string userWithRole_ = "";
    /// <summary>
    ///当前操作角色对应表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserWithRole {
      get { return userWithRole_; }
      set {
        userWithRole_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "current_task_index" field.</summary>
    public const int CurrentTaskIndexFieldNumber = 5;
    private int currentTaskIndex_;
    /// <summary>
    ///当前任务序号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentTaskIndex {
      get { return currentTaskIndex_; }
      set {
        currentTaskIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRoomInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRoomInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomStatus != other.RoomStatus) return false;
      if (OperatorsNumber != other.OperatorsNumber) return false;
      if (ViewersNumber != other.ViewersNumber) return false;
      if (UserWithRole != other.UserWithRole) return false;
      if (CurrentTaskIndex != other.CurrentTaskIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomStatus != 0) hash ^= RoomStatus.GetHashCode();
      if (OperatorsNumber != 0) hash ^= OperatorsNumber.GetHashCode();
      if (ViewersNumber != 0) hash ^= ViewersNumber.GetHashCode();
      if (UserWithRole.Length != 0) hash ^= UserWithRole.GetHashCode();
      if (CurrentTaskIndex != 0) hash ^= CurrentTaskIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomStatus != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomStatus);
      }
      if (OperatorsNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(OperatorsNumber);
      }
      if (ViewersNumber != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ViewersNumber);
      }
      if (UserWithRole.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(UserWithRole);
      }
      if (CurrentTaskIndex != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CurrentTaskIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomStatus);
      }
      if (OperatorsNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OperatorsNumber);
      }
      if (ViewersNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ViewersNumber);
      }
      if (UserWithRole.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserWithRole);
      }
      if (CurrentTaskIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentTaskIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRoomInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomStatus != 0) {
        RoomStatus = other.RoomStatus;
      }
      if (other.OperatorsNumber != 0) {
        OperatorsNumber = other.OperatorsNumber;
      }
      if (other.ViewersNumber != 0) {
        ViewersNumber = other.ViewersNumber;
      }
      if (other.UserWithRole.Length != 0) {
        UserWithRole = other.UserWithRole;
      }
      if (other.CurrentTaskIndex != 0) {
        CurrentTaskIndex = other.CurrentTaskIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomStatus = input.ReadInt32();
            break;
          }
          case 16: {
            OperatorsNumber = input.ReadInt32();
            break;
          }
          case 24: {
            ViewersNumber = input.ReadInt32();
            break;
          }
          case 34: {
            UserWithRole = input.ReadString();
            break;
          }
          case 40: {
            CurrentTaskIndex = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListRoomRequest : pb::IMessage<ListRoomRequest> {
    private static readonly pb::MessageParser<ListRoomRequest> _parser = new pb::MessageParser<ListRoomRequest>(() => new ListRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRoomRequest(ListRoomRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRoomRequest Clone() {
      return new ListRoomRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListRoomRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class JoinRoomRequest : pb::IMessage<JoinRoomRequest> {
    private static readonly pb::MessageParser<JoinRoomRequest> _parser = new pb::MessageParser<JoinRoomRequest>(() => new JoinRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomRequest(JoinRoomRequest other) : this() {
      roomNo_ = other.roomNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomRequest Clone() {
      return new JoinRoomRequest(this);
    }

    /// <summary>Field number for the "room_no" field.</summary>
    public const int RoomNoFieldNumber = 1;
    private string roomNo_ = "";
    /// <summary>
    /// 房间号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomNo {
      get { return roomNo_; }
      set {
        roomNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomNo != other.RoomNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomNo.Length != 0) hash ^= RoomNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomNo.Length != 0) {
        RoomNo = other.RoomNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomNo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PushTaskInfoRequest : pb::IMessage<PushTaskInfoRequest> {
    private static readonly pb::MessageParser<PushTaskInfoRequest> _parser = new pb::MessageParser<PushTaskInfoRequest>(() => new PushTaskInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PushTaskInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushTaskInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushTaskInfoRequest(PushTaskInfoRequest other) : this() {
      taskinfo_ = other.taskinfo_ != null ? other.taskinfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushTaskInfoRequest Clone() {
      return new PushTaskInfoRequest(this);
    }

    /// <summary>Field number for the "taskinfo" field.</summary>
    public const int TaskinfoFieldNumber = 1;
    private global::Im.TaskInfo taskinfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Im.TaskInfo Taskinfo {
      get { return taskinfo_; }
      set {
        taskinfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PushTaskInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PushTaskInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Taskinfo, other.Taskinfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (taskinfo_ != null) hash ^= Taskinfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (taskinfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Taskinfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (taskinfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Taskinfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PushTaskInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.taskinfo_ != null) {
        if (taskinfo_ == null) {
          Taskinfo = new global::Im.TaskInfo();
        }
        Taskinfo.MergeFrom(other.Taskinfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (taskinfo_ == null) {
              Taskinfo = new global::Im.TaskInfo();
            }
            input.ReadMessage(Taskinfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PushTaskInfoRsp : pb::IMessage<PushTaskInfoRsp> {
    private static readonly pb::MessageParser<PushTaskInfoRsp> _parser = new pb::MessageParser<PushTaskInfoRsp>(() => new PushTaskInfoRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PushTaskInfoRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushTaskInfoRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushTaskInfoRsp(PushTaskInfoRsp other) : this() {
      taskid_ = other.taskid_ != null ? other.taskid_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushTaskInfoRsp Clone() {
      return new PushTaskInfoRsp(this);
    }

    /// <summary>Field number for the "taskid" field.</summary>
    public const int TaskidFieldNumber = 1;
    private global::Im.TaskInfo taskid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Im.TaskInfo Taskid {
      get { return taskid_; }
      set {
        taskid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PushTaskInfoRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PushTaskInfoRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Taskid, other.Taskid)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (taskid_ != null) hash ^= Taskid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (taskid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Taskid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (taskid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Taskid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PushTaskInfoRsp other) {
      if (other == null) {
        return;
      }
      if (other.taskid_ != null) {
        if (taskid_ == null) {
          Taskid = new global::Im.TaskInfo();
        }
        Taskid.MergeFrom(other.Taskid);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (taskid_ == null) {
              Taskid = new global::Im.TaskInfo();
            }
            input.ReadMessage(Taskid);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///我的任务信息
  /// </summary>
  public sealed partial class TaskInfo : pb::IMessage<TaskInfo> {
    private static readonly pb::MessageParser<TaskInfo> _parser = new pb::MessageParser<TaskInfo>(() => new TaskInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskInfo(TaskInfo other) : this() {
      time_ = other.time_;
      taskid_ = other.taskid_;
      chaterp_ = other.chaterp_;
      playablestatus_ = other.playablestatus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskInfo Clone() {
      return new TaskInfo(this);
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 1;
    private double time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "taskid" field.</summary>
    public const int TaskidFieldNumber = 2;
    private int taskid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Taskid {
      get { return taskid_; }
      set {
        taskid_ = value;
      }
    }

    /// <summary>Field number for the "chaterp" field.</summary>
    public const int ChaterpFieldNumber = 3;
    private int chaterp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Chaterp {
      get { return chaterp_; }
      set {
        chaterp_ = value;
      }
    }

    /// <summary>Field number for the "playablestatus" field.</summary>
    public const int PlayablestatusFieldNumber = 4;
    private int playablestatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Playablestatus {
      get { return playablestatus_; }
      set {
        playablestatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Time, other.Time)) return false;
      if (Taskid != other.Taskid) return false;
      if (Chaterp != other.Chaterp) return false;
      if (Playablestatus != other.Playablestatus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Time != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Time);
      if (Taskid != 0) hash ^= Taskid.GetHashCode();
      if (Chaterp != 0) hash ^= Chaterp.GetHashCode();
      if (Playablestatus != 0) hash ^= Playablestatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Time != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Time);
      }
      if (Taskid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Taskid);
      }
      if (Chaterp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Chaterp);
      }
      if (Playablestatus != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Playablestatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Time != 0D) {
        size += 1 + 8;
      }
      if (Taskid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Taskid);
      }
      if (Chaterp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Chaterp);
      }
      if (Playablestatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Playablestatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskInfo other) {
      if (other == null) {
        return;
      }
      if (other.Time != 0D) {
        Time = other.Time;
      }
      if (other.Taskid != 0) {
        Taskid = other.Taskid;
      }
      if (other.Chaterp != 0) {
        Chaterp = other.Chaterp;
      }
      if (other.Playablestatus != 0) {
        Playablestatus = other.Playablestatus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Time = input.ReadDouble();
            break;
          }
          case 16: {
            Taskid = input.ReadInt32();
            break;
          }
          case 24: {
            Chaterp = input.ReadInt32();
            break;
          }
          case 32: {
            Playablestatus = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExitRoomRequest : pb::IMessage<ExitRoomRequest> {
    private static readonly pb::MessageParser<ExitRoomRequest> _parser = new pb::MessageParser<ExitRoomRequest>(() => new ExitRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExitRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitRoomRequest(ExitRoomRequest other) : this() {
      roomNo_ = other.roomNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitRoomRequest Clone() {
      return new ExitRoomRequest(this);
    }

    /// <summary>Field number for the "room_no" field.</summary>
    public const int RoomNoFieldNumber = 1;
    private string roomNo_ = "";
    /// <summary>
    /// 房间号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomNo {
      get { return roomNo_; }
      set {
        roomNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExitRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExitRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomNo != other.RoomNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomNo.Length != 0) hash ^= RoomNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExitRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.RoomNo.Length != 0) {
        RoomNo = other.RoomNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomNo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ErrorResponse : pb::IMessage<ErrorResponse> {
    private static readonly pb::MessageParser<ErrorResponse> _parser = new pb::MessageParser<ErrorResponse>(() => new ErrorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ErrorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorResponse(ErrorResponse other) : this() {
      errCode_ = other.errCode_;
      errMessage_ = other.errMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorResponse Clone() {
      return new ErrorResponse(this);
    }

    /// <summary>Field number for the "err_code" field.</summary>
    public const int ErrCodeFieldNumber = 1;
    private int errCode_;
    /// <summary>
    /// 错误代码 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ErrCode {
      get { return errCode_; }
      set {
        errCode_ = value;
      }
    }

    /// <summary>Field number for the "err_message" field.</summary>
    public const int ErrMessageFieldNumber = 2;
    private string errMessage_ = "";
    /// <summary>
    /// 错误消息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrMessage {
      get { return errMessage_; }
      set {
        errMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ErrorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ErrorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrCode != other.ErrCode) return false;
      if (ErrMessage != other.ErrMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrCode != 0) hash ^= ErrCode.GetHashCode();
      if (ErrMessage.Length != 0) hash ^= ErrMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ErrCode);
      }
      if (ErrMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrCode);
      }
      if (ErrMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ErrorResponse other) {
      if (other == null) {
        return;
      }
      if (other.ErrCode != 0) {
        ErrCode = other.ErrCode;
      }
      if (other.ErrMessage.Length != 0) {
        ErrMessage = other.ErrMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrCode = input.ReadInt32();
            break;
          }
          case 18: {
            ErrMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SuccessResponse : pb::IMessage<SuccessResponse> {
    private static readonly pb::MessageParser<SuccessResponse> _parser = new pb::MessageParser<SuccessResponse>(() => new SuccessResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SuccessResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuccessResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuccessResponse(SuccessResponse other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuccessResponse Clone() {
      return new SuccessResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    /// <summary>
    /// 成功消息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SuccessResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SuccessResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SuccessResponse other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartGameRequest : pb::IMessage<StartGameRequest> {
    private static readonly pb::MessageParser<StartGameRequest> _parser = new pb::MessageParser<StartGameRequest>(() => new StartGameRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartGameRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameRequest(StartGameRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameRequest Clone() {
      return new StartGameRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartGameRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartGameRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartGameRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class StartGameRsp : pb::IMessage<StartGameRsp> {
    private static readonly pb::MessageParser<StartGameRsp> _parser = new pb::MessageParser<StartGameRsp>(() => new StartGameRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartGameRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameRsp(StartGameRsp other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGameRsp Clone() {
      return new StartGameRsp(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartGameRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartGameRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartGameRsp other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GameCommand : pb::IMessage<GameCommand> {
    private static readonly pb::MessageParser<GameCommand> _parser = new pb::MessageParser<GameCommand>(() => new GameCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameCommand(GameCommand other) : this() {
      type_ = other.type_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameCommand Clone() {
      return new GameCommand(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Im.GameCommandType type_ = global::Im.GameCommandType.UpdateRoomMaxusers;
    /// <summary>
    /// 命令类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Im.GameCommandType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Im.GameCommandType.UpdateRoomMaxusers) hash ^= Type.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Im.GameCommandType.UpdateRoomMaxusers) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Im.GameCommandType.UpdateRoomMaxusers) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameCommand other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Im.GameCommandType.UpdateRoomMaxusers) {
        Type = other.Type;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Im.GameCommandType) input.ReadEnum();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ImMsg : pb::IMessage<ImMsg> {
    private static readonly pb::MessageParser<ImMsg> _parser = new pb::MessageParser<ImMsg>(() => new ImMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMsg(ImMsg other) : this() {
      id_ = other.id_;
      msg_ = other.msg_ != null ? other.msg_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImMsg Clone() {
      return new ImMsg(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///随机编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Any msg_;
    /// <summary>
    ///消息主体
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Msg {
      get { return msg_; }
      set {
        msg_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Msg, other.Msg)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (msg_ != null) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (msg_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (msg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImMsg other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.msg_ != null) {
        if (msg_ == null) {
          Msg = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Msg.MergeFrom(other.Msg);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (msg_ == null) {
              Msg = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Msg);
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinRoomResponse : pb::IMessage<JoinRoomResponse> {
    private static readonly pb::MessageParser<JoinRoomResponse> _parser = new pb::MessageParser<JoinRoomResponse>(() => new JoinRoomResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRoomResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomResponse(JoinRoomResponse other) : this() {
      playerPack_ = other.playerPack_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomResponse Clone() {
      return new JoinRoomResponse(this);
    }

    /// <summary>Field number for the "playerPack" field.</summary>
    public const int PlayerPackFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Im.PlayerPack> _repeated_playerPack_codec
        = pb::FieldCodec.ForMessage(10, global::Im.PlayerPack.Parser);
    private readonly pbc::RepeatedField<global::Im.PlayerPack> playerPack_ = new pbc::RepeatedField<global::Im.PlayerPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Im.PlayerPack> PlayerPack {
      get { return playerPack_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRoomResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRoomResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!playerPack_.Equals(other.playerPack_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= playerPack_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      playerPack_.WriteTo(output, _repeated_playerPack_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += playerPack_.CalculateSize(_repeated_playerPack_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRoomResponse other) {
      if (other == null) {
        return;
      }
      playerPack_.Add(other.playerPack_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            playerPack_.AddEntriesFrom(input, _repeated_playerPack_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpPos : pb::IMessage<UpPos> {
    private static readonly pb::MessageParser<UpPos> _parser = new pb::MessageParser<UpPos>(() => new UpPos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpPos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpPos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpPos(UpPos other) : this() {
      playerPack_ = other.playerPack_ != null ? other.playerPack_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpPos Clone() {
      return new UpPos(this);
    }

    /// <summary>Field number for the "playerPack" field.</summary>
    public const int PlayerPackFieldNumber = 1;
    private global::Im.PlayerPack playerPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Im.PlayerPack PlayerPack {
      get { return playerPack_; }
      set {
        playerPack_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpPos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpPos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerPack, other.PlayerPack)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (playerPack_ != null) hash ^= PlayerPack.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (playerPack_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerPack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (playerPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerPack);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpPos other) {
      if (other == null) {
        return;
      }
      if (other.playerPack_ != null) {
        if (playerPack_ == null) {
          PlayerPack = new global::Im.PlayerPack();
        }
        PlayerPack.MergeFrom(other.PlayerPack);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playerPack_ == null) {
              PlayerPack = new global::Im.PlayerPack();
            }
            input.ReadMessage(PlayerPack);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpPosResponse : pb::IMessage<UpPosResponse> {
    private static readonly pb::MessageParser<UpPosResponse> _parser = new pb::MessageParser<UpPosResponse>(() => new UpPosResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpPosResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpPosResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpPosResponse(UpPosResponse other) : this() {
      playerPack_ = other.playerPack_ != null ? other.playerPack_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpPosResponse Clone() {
      return new UpPosResponse(this);
    }

    /// <summary>Field number for the "playerPack" field.</summary>
    public const int PlayerPackFieldNumber = 1;
    private global::Im.PlayerPack playerPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Im.PlayerPack PlayerPack {
      get { return playerPack_; }
      set {
        playerPack_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpPosResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpPosResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerPack, other.PlayerPack)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (playerPack_ != null) hash ^= PlayerPack.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (playerPack_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerPack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (playerPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerPack);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpPosResponse other) {
      if (other == null) {
        return;
      }
      if (other.playerPack_ != null) {
        if (playerPack_ == null) {
          PlayerPack = new global::Im.PlayerPack();
        }
        PlayerPack.MergeFrom(other.PlayerPack);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playerPack_ == null) {
              PlayerPack = new global::Im.PlayerPack();
            }
            input.ReadMessage(PlayerPack);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerPack : pb::IMessage<PlayerPack> {
    private static readonly pb::MessageParser<PlayerPack> _parser = new pb::MessageParser<PlayerPack>(() => new PlayerPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPack(PlayerPack other) : this() {
      uid_ = other.uid_;
      posPack_ = other.posPack_ != null ? other.posPack_.Clone() : null;
      animPack_ = other.animPack_ != null ? other.animPack_.Clone() : null;
      nickName_ = other.nickName_;
      chatno_ = other.chatno_;
      roleInfo_ = other.roleInfo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPack Clone() {
      return new PlayerPack(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private string uid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "posPack" field.</summary>
    public const int PosPackFieldNumber = 2;
    private global::Im.PosPack posPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Im.PosPack PosPack {
      get { return posPack_; }
      set {
        posPack_ = value;
      }
    }

    /// <summary>Field number for the "animPack" field.</summary>
    public const int AnimPackFieldNumber = 3;
    private global::Im.AnimPack animPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Im.AnimPack AnimPack {
      get { return animPack_; }
      set {
        animPack_ = value;
      }
    }

    /// <summary>Field number for the "nickName" field.</summary>
    public const int NickNameFieldNumber = 4;
    private string nickName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chatno" field.</summary>
    public const int ChatnoFieldNumber = 5;
    private string chatno_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Chatno {
      get { return chatno_; }
      set {
        chatno_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roleInfo" field.</summary>
    public const int RoleInfoFieldNumber = 6;
    private string roleInfo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoleInfo {
      get { return roleInfo_; }
      set {
        roleInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (!object.Equals(PosPack, other.PosPack)) return false;
      if (!object.Equals(AnimPack, other.AnimPack)) return false;
      if (NickName != other.NickName) return false;
      if (Chatno != other.Chatno) return false;
      if (RoleInfo != other.RoleInfo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (posPack_ != null) hash ^= PosPack.GetHashCode();
      if (animPack_ != null) hash ^= AnimPack.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (Chatno.Length != 0) hash ^= Chatno.GetHashCode();
      if (RoleInfo.Length != 0) hash ^= RoleInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (posPack_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PosPack);
      }
      if (animPack_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AnimPack);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NickName);
      }
      if (Chatno.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Chatno);
      }
      if (RoleInfo.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RoleInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (posPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PosPack);
      }
      if (animPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnimPack);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (Chatno.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Chatno);
      }
      if (RoleInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoleInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerPack other) {
      if (other == null) {
        return;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.posPack_ != null) {
        if (posPack_ == null) {
          PosPack = new global::Im.PosPack();
        }
        PosPack.MergeFrom(other.PosPack);
      }
      if (other.animPack_ != null) {
        if (animPack_ == null) {
          AnimPack = new global::Im.AnimPack();
        }
        AnimPack.MergeFrom(other.AnimPack);
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.Chatno.Length != 0) {
        Chatno = other.Chatno;
      }
      if (other.RoleInfo.Length != 0) {
        RoleInfo = other.RoleInfo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            if (posPack_ == null) {
              PosPack = new global::Im.PosPack();
            }
            input.ReadMessage(PosPack);
            break;
          }
          case 26: {
            if (animPack_ == null) {
              AnimPack = new global::Im.AnimPack();
            }
            input.ReadMessage(AnimPack);
            break;
          }
          case 34: {
            NickName = input.ReadString();
            break;
          }
          case 42: {
            Chatno = input.ReadString();
            break;
          }
          case 50: {
            RoleInfo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PosPack : pb::IMessage<PosPack> {
    private static readonly pb::MessageParser<PosPack> _parser = new pb::MessageParser<PosPack>(() => new PosPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PosPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PosPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PosPack(PosPack other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      rotY_ = other.rotY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PosPack Clone() {
      return new PosPack(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "rotY" field.</summary>
    public const int RotYFieldNumber = 4;
    private float rotY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RotY {
      get { return rotY_; }
      set {
        rotY_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PosPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PosPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RotY, other.RotY)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (RotY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RotY);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (RotY != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(RotY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (RotY != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PosPack other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.RotY != 0F) {
        RotY = other.RotY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
          case 37: {
            RotY = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AnimPack : pb::IMessage<AnimPack> {
    private static readonly pb::MessageParser<AnimPack> _parser = new pb::MessageParser<AnimPack>(() => new AnimPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnimPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnimPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnimPack(AnimPack other) : this() {
      speed_ = other.speed_;
      jump_ = other.jump_;
      grounded_ = other.grounded_;
      freeFall_ = other.freeFall_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnimPack Clone() {
      return new AnimPack(this);
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 1;
    private float speed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    /// <summary>Field number for the "Jump" field.</summary>
    public const int JumpFieldNumber = 2;
    private bool jump_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Jump {
      get { return jump_; }
      set {
        jump_ = value;
      }
    }

    /// <summary>Field number for the "Grounded" field.</summary>
    public const int GroundedFieldNumber = 3;
    private bool grounded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Grounded {
      get { return grounded_; }
      set {
        grounded_ = value;
      }
    }

    /// <summary>Field number for the "FreeFall" field.</summary>
    public const int FreeFallFieldNumber = 4;
    private bool freeFall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FreeFall {
      get { return freeFall_; }
      set {
        freeFall_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnimPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnimPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Speed, other.Speed)) return false;
      if (Jump != other.Jump) return false;
      if (Grounded != other.Grounded) return false;
      if (FreeFall != other.FreeFall) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Speed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Speed);
      if (Jump != false) hash ^= Jump.GetHashCode();
      if (Grounded != false) hash ^= Grounded.GetHashCode();
      if (FreeFall != false) hash ^= FreeFall.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Speed != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Speed);
      }
      if (Jump != false) {
        output.WriteRawTag(16);
        output.WriteBool(Jump);
      }
      if (Grounded != false) {
        output.WriteRawTag(24);
        output.WriteBool(Grounded);
      }
      if (FreeFall != false) {
        output.WriteRawTag(32);
        output.WriteBool(FreeFall);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Speed != 0F) {
        size += 1 + 4;
      }
      if (Jump != false) {
        size += 1 + 1;
      }
      if (Grounded != false) {
        size += 1 + 1;
      }
      if (FreeFall != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnimPack other) {
      if (other == null) {
        return;
      }
      if (other.Speed != 0F) {
        Speed = other.Speed;
      }
      if (other.Jump != false) {
        Jump = other.Jump;
      }
      if (other.Grounded != false) {
        Grounded = other.Grounded;
      }
      if (other.FreeFall != false) {
        FreeFall = other.FreeFall;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Speed = input.ReadFloat();
            break;
          }
          case 16: {
            Jump = input.ReadBool();
            break;
          }
          case 24: {
            Grounded = input.ReadBool();
            break;
          }
          case 32: {
            FreeFall = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddPlayer : pb::IMessage<AddPlayer> {
    private static readonly pb::MessageParser<AddPlayer> _parser = new pb::MessageParser<AddPlayer>(() => new AddPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddPlayer(AddPlayer other) : this() {
      playerPack_ = other.playerPack_ != null ? other.playerPack_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddPlayer Clone() {
      return new AddPlayer(this);
    }

    /// <summary>Field number for the "playerPack" field.</summary>
    public const int PlayerPackFieldNumber = 1;
    private global::Im.PlayerPack playerPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Im.PlayerPack PlayerPack {
      get { return playerPack_; }
      set {
        playerPack_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerPack, other.PlayerPack)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (playerPack_ != null) hash ^= PlayerPack.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (playerPack_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerPack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (playerPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerPack);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddPlayer other) {
      if (other == null) {
        return;
      }
      if (other.playerPack_ != null) {
        if (playerPack_ == null) {
          PlayerPack = new global::Im.PlayerPack();
        }
        PlayerPack.MergeFrom(other.PlayerPack);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playerPack_ == null) {
              PlayerPack = new global::Im.PlayerPack();
            }
            input.ReadMessage(PlayerPack);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Logout : pb::IMessage<Logout> {
    private static readonly pb::MessageParser<Logout> _parser = new pb::MessageParser<Logout>(() => new Logout());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Logout> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Logout() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Logout(Logout other) : this() {
      playerPack_ = other.playerPack_ != null ? other.playerPack_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Logout Clone() {
      return new Logout(this);
    }

    /// <summary>Field number for the "playerPack" field.</summary>
    public const int PlayerPackFieldNumber = 1;
    private global::Im.PlayerPack playerPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Im.PlayerPack PlayerPack {
      get { return playerPack_; }
      set {
        playerPack_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Logout);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Logout other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerPack, other.PlayerPack)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (playerPack_ != null) hash ^= PlayerPack.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (playerPack_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerPack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (playerPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerPack);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Logout other) {
      if (other == null) {
        return;
      }
      if (other.playerPack_ != null) {
        if (playerPack_ == null) {
          PlayerPack = new global::Im.PlayerPack();
        }
        PlayerPack.MergeFrom(other.PlayerPack);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playerPack_ == null) {
              PlayerPack = new global::Im.PlayerPack();
            }
            input.ReadMessage(PlayerPack);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExitRoom : pb::IMessage<ExitRoom> {
    private static readonly pb::MessageParser<ExitRoom> _parser = new pb::MessageParser<ExitRoom>(() => new ExitRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExitRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Im.ImReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitRoom(ExitRoom other) : this() {
      playerPack_ = other.playerPack_ != null ? other.playerPack_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitRoom Clone() {
      return new ExitRoom(this);
    }

    /// <summary>Field number for the "playerPack" field.</summary>
    public const int PlayerPackFieldNumber = 1;
    private global::Im.PlayerPack playerPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Im.PlayerPack PlayerPack {
      get { return playerPack_; }
      set {
        playerPack_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExitRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExitRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerPack, other.PlayerPack)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (playerPack_ != null) hash ^= PlayerPack.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (playerPack_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerPack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (playerPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerPack);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExitRoom other) {
      if (other == null) {
        return;
      }
      if (other.playerPack_ != null) {
        if (playerPack_ == null) {
          PlayerPack = new global::Im.PlayerPack();
        }
        PlayerPack.MergeFrom(other.PlayerPack);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playerPack_ == null) {
              PlayerPack = new global::Im.PlayerPack();
            }
            input.ReadMessage(PlayerPack);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
